using GeneratorSerialization.Tests;
using NUnit.Framework;

namespace CslaGeneratorSerialization.Tests.Generators.ValueTypes;

public static class BooleanGeneratorTests
{
	[Test]
	public static async Task GenerateAsync()
	{
		var code =
			"""
			using Csla;
			using System;

			namespace Domains;

			[Serializable]
			public sealed partial class Data
				: BusinessBase<Data>
			{
				public static readonly PropertyInfo<bool> ContentsProperty =
					RegisterProperty<bool>(_ => _.Contents);
				public bool Contents
				{
					get => this.GetProperty(Data.ContentsProperty);
					set => this.SetProperty(Data.ContentsProperty, value);
				}
			}
			""";

		var generatedCode =
			"""
			// <auto-generated/>
			
			using CslaGeneratorSerialization.Extensions;
			
			#nullable enable
			
			namespace Domains;
			
			public sealed partial class Data
				: global::CslaGeneratorSerialization.IGeneratorSerializable
			{
				void global::CslaGeneratorSerialization.IGeneratorSerializable.SetState(global::System.IO.BinaryWriter writer)
				{
					writer.Write(this.GetType().FullName!);
					
					// Set custom object state
					writer.Write(this.ReadProperty(global::Domains.Data.ContentsProperty));
					
					// Set any children...
					
					// Set base object state
					writer.Write(this.IsNew);
					writer.Write(this.IsDeleted);
					writer.Write(this.IsDirty);
					writer.Write(this.IsChild);
					writer.Write(this.DisableIEditableObject);
					
					//The only way I can get these is through Reflection.
					//Ugly, but...means must.
					var type = this.GetType();
					writer.Write((bool)type.GetField("_neverCommitted")!.GetValue(this)!);
					writer.Write((int)type.GetField("_editLevelAdded")!.GetValue(this)!);
					writer.Write((int)type.GetField("_identity")!.GetValue(this)!);
				}
				
				void global::CslaGeneratorSerialization.IGeneratorSerializable.GetState(global::System.IO.BinaryReader reader)
				{
					// Get custom object state
					this.LoadProperty(global::Domains.Data.ContentsProperty, reader.ReadBoolean());
					
					// Get any children...
					
					//The only way I can get these (except for DisableIEditableObject) is through Reflection.
					//Ugly, but...means must.
					var type = this.GetType();
					type.GetField("_isNew")!.SetValue(this, reader.ReadBoolean());
					type.GetField("_isDeleted")!.SetValue(this, reader.ReadBoolean());
					type.GetField("_isDirty")!.SetValue(this, reader.ReadBoolean());
					type.GetField("_isChild")!.SetValue(this, reader.ReadBoolean());
					this.DisableIEditableObject = reader.ReadBoolean();
					
					type.GetField("_neverCommitted")!.SetValue(this, reader.ReadBoolean());
					type.GetField("_editLevelAdded")!.SetValue(this, reader.ReadInt32());
					type.GetField("_identity")!.SetValue(this, reader.ReadInt32());
				}
			}
			
			""";

		await TestAssistants.RunGeneratorAsync<GeneratorSerializationGenerator>(code,
			[(typeof(GeneratorSerializationGenerator), "Domains.Data_GeneratorSerialization.g.cs", generatedCode)],
			[]);
	}

	[Test]
	public static async Task GenerateWithNullableAsync()
	{
		var code =
			"""
			using Csla;
			using System;

			namespace Domains;

			[Serializable]
			public sealed partial class Data
				: BusinessBase<Data>
			{
				public static readonly PropertyInfo<bool?> ContentsProperty =
					RegisterProperty<bool?>(_ => _.Contents);
				public bool? Contents
				{
					get => this.GetProperty(Data.ContentsProperty);
					set => this.SetProperty(Data.ContentsProperty, value);
				}
			}
			""";

		var generatedCode =
			"""
			// <auto-generated/>
			
			using CslaGeneratorSerialization.Extensions;
			
			#nullable enable
			
			namespace Domains;
			
			public sealed partial class Data
				: global::CslaGeneratorSerialization.IGeneratorSerializable
			{
				void global::CslaGeneratorSerialization.IGeneratorSerializable.SetState(global::System.IO.BinaryWriter writer)
				{
					writer.Write(this.GetType().FullName!);
					
					// Set custom object state
					var value = this.ReadProperty(global::Domains.Data.ContentsProperty);
					
					if (value is not null)
					{
						writer.Write(value.Value);
					}
					else
					{
						writer.Write((byte)global::CslaGeneratorSerialization.SerializationState.Null);
					}
					
					// Set any children...
					
					// Set base object state
					writer.Write(this.IsNew);
					writer.Write(this.IsDeleted);
					writer.Write(this.IsDirty);
					writer.Write(this.IsChild);
					writer.Write(this.DisableIEditableObject);
					
					//The only way I can get these is through Reflection.
					//Ugly, but...means must.
					var type = this.GetType();
					writer.Write((bool)type.GetField("_neverCommitted")!.GetValue(this)!);
					writer.Write((int)type.GetField("_editLevelAdded")!.GetValue(this)!);
					writer.Write((int)type.GetField("_identity")!.GetValue(this)!);
				}
				
				void global::CslaGeneratorSerialization.IGeneratorSerializable.GetState(global::System.IO.BinaryReader reader)
				{
					// Get custom object state
					if (reader.ReadStateValue() == global::CslaGeneratorSerialization.SerializationState.Value)
					{
						this.LoadProperty(global::Domains.Data.ContentsProperty, reader.ReadBoolean());
					}
					
					// Get any children...
					
					//The only way I can get these (except for DisableIEditableObject) is through Reflection.
					//Ugly, but...means must.
					var type = this.GetType();
					type.GetField("_isNew")!.SetValue(this, reader.ReadBoolean());
					type.GetField("_isDeleted")!.SetValue(this, reader.ReadBoolean());
					type.GetField("_isDirty")!.SetValue(this, reader.ReadBoolean());
					type.GetField("_isChild")!.SetValue(this, reader.ReadBoolean());
					this.DisableIEditableObject = reader.ReadBoolean();
					
					type.GetField("_neverCommitted")!.SetValue(this, reader.ReadBoolean());
					type.GetField("_editLevelAdded")!.SetValue(this, reader.ReadInt32());
					type.GetField("_identity")!.SetValue(this, reader.ReadInt32());
				}
			}
			
			""";

		await TestAssistants.RunGeneratorAsync<GeneratorSerializationGenerator>(code,
			[(typeof(GeneratorSerializationGenerator), "Domains.Data_GeneratorSerialization.g.cs", generatedCode)],
			[]);
	}
}